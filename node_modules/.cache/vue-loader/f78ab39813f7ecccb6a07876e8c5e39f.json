{"remainingRequest":"/home/sota/.nvm/versions/node/v14.17.3/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sota/js_practice/to-do_list_vue_js/app.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/sota/js_practice/to-do_list_vue_js/app.vue","mtime":1627661047690},{"path":"/home/sota/.nvm/versions/node/v14.17.3/lib/node_modules/@vue/cli-service-global/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sota/.nvm/versions/node/v14.17.3/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/sota/.nvm/versions/node/v14.17.3/lib/node_modules/@vue/cli-service-global/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/sota/.nvm/versions/node/v14.17.3/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sota/.nvm/versions/node/v14.17.3/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiogewogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7Cn0KI2FwcCB7CiAgbWF4LXdpZHRoOiA2NDBweDsKICBtYXJnaW46IDAgYXV0bzsKfQp0YWJsZSB7CiAgd2lkdGg6IDEwMCU7CiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKfQoKYnV0dG9uIHsKICBib3JkZXI6IG5vbmU7CiAgYm9yZGVyLXJhZGl1czogMjBweDsKICBsaW5lLWhlaWdodDogMjRweDsKICBwYWRkaW5nOiAwIDhweDsKICBiYWNrZ3JvdW5kOiAjMDA5OWU0OwogIGNvbG9yOiAjZmZmOwogIGN1cnNvcjogcG9pbnRlcjsKfQo="},{"version":3,"sources":["app.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.vue","sourceRoot":".","sourcesContent":["<template>\n  <div id=\"app\">\n    <form v-on:submit.prevent=\"addOrSet\">\n      <label for=\"new-todo\">Add a todo</label>\n      <input\n        v-model=\"newTodoText\"\n        ref=\"editor\"\n      >\n      <button>{{ changeButtonText }}</button>\n    </form>\n    <ul>\n      <li\n        v-for=\"(todo, index) in todos\"\n        v-bind:key=\"todo.id\">\n      {{todo.title}}\n        <span class=\"pull-right\">\n          <button v-on:click=\"removeTodo(index)\">Remove</button>\n          <button v-on:click=\"setEditInfo(index)\">Edit</button>\n        </span>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  el: '#app',\n  data: function () {\n    return {\n    newTodoText: '',\n    editIndex: -1,\n    todos: [],\n    nextTodoId: 0\n    }\n  },\n  computed: {\n    changeButtonText() {\n        return this.editIndex === -1 ? 'add' : 'finish edition';\n    }\n  },\n\n  mounted() {\n    this.todos = JSON.parse(localStorage.getItem('access_todos')) || [];\n    var ids = [];\n    for (const todo of this.todos){\n      ids.push(todo.id);\n    }\n    const aryMax = function (a, b) {return Math.max(a, b);}\n    let maxId = ids.reduce(aryMax);\n    this.nextTodoId = maxId + 1;\n  },\n\n  methods: {\n    addOrSet () {\n      if(this.editIndex === -1) {\n        this.addNewTodo();\n      } else {\n        this.editTodo();\n      }\n      this.resetInfo();\n      this.saveTodos();\n    },\n    addNewTodo() {\n      this.todos.push(\n        {\n          id: this.nextTodoId++,\n          title: this.newTodoText,\n        });\n    },\n    editTodo() {\n      this.todos.splice(this.editIndex, 1, {\n        id: this.editIndex,\n        title: this.newTodoText,\n      });\n    },\n    setEditInfo(index) {\n        this.editIndex = index;\n        this.newTodoText = this.todos[index].title;\n        this.$refs.editor.focus();\n    },\n    removeTodo(index) {\n      this.todos.splice(index, 1);\n      this.saveTodos();\n    },\n    saveTodos() {\n      localStorage.setItem('access_todos', JSON.stringify(this.todos));\n    },\n    resetInfo() {\n      this.newTodoText = '';\n      this.editIndex = -1;\n    },\n  },\n}\n</script>\n\n<style>\n* {\n  box-sizing: border-box;\n}\n#app {\n  max-width: 640px;\n  margin: 0 auto;\n}\ntable {\n  width: 100%;\n  border-collapse: collapse;\n}\n\nbutton {\n  border: none;\n  border-radius: 20px;\n  line-height: 24px;\n  padding: 0 8px;\n  background: #0099e4;\n  color: #fff;\n  cursor: pointer;\n}\n</style>\n"]}]}